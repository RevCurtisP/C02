; c02 Program Initialization Code for Commodore 64

;PETSCII Key Mappings
DELKEY  EQU $14 ;Delete/Backspace Key (Delete)
ESCKEY  EQU $03 ;Escape/Stop Key      (RUN/STOP)
RTNKEY  EQU $0D ;Return/Enter Key     (RETURN)

;Zero Page Variables
XMBANK  EQU $0A ;Extended Memory Bank (Load/Verify Flag)
XADRLO  EQU $0B ;Ext Memory Address LSB (Text Index/Array Size)
XADRHI  EQU $0C ;Ext Memory Address MSB (Array Dimension Fkags)
SRCLO   EQU $22 ;Source Pointer LSB [Temporary Pointers]
SRCHI   EQU $23 ;Source Pointer MSB [Temporary Pointers]
DSTLO   EQU $24 ;Destination Pointer LSB [Temporary Pointers]
DSTHI   EQU $25 ;Destination Pointer MSB [Temporary Pointers]
BLKLO   EQU $26 ;Block Pointer LSB [Floating Point Work Area]
BLKHI   EQU $27 ;Block Pointer MSB [Floating Point Work Area]
STKLO   EQU $28 ;Stack Pointer LSB [Floating Point Work Area]
STKHI   EQU $29 ;Stack Pointer MSB [Floating Point Work Area]
BFRLO   EQU $35 ;Buffer Pointer LSB [Temporary String Pointer]
BFRHI   EQU $36 ;Buffer Pointer MSB [Temporary String Pointer]
RDSEED  EQU $A2 ;Random Seed [Software Jiffy Clock (Low Byte)]
TEMP0   EQU $FB ;Temporary Variable [Unused Byte]
TEMP1   EQU $FC ;Temporary Variable [Unused Byte]
TEMP2   EQU $FD ;Temporary Variable [Unused Byte]
TEMP3   EQU $FE ;Temporary Variable [Unused Byte]

;System Variables
USER3   EQU $0313 ;Free Byte for User Programs

BLKSLO  EQU $0334 ;Block Start LSB [Unused Byte]
BLKSHI  EQU $0335 ;Block Start MSB [Unused Byte]
BLKELO  EQU $0336 ;Block Start MSB [Unused Byte]
BLKEHI  EQU $0337 ;Block End MSB [Unused Byte]
BLKLEN  EQU $0338 ;Block Length [Unused Byte]

RANDOM  EQU $0339 ;Random Number Storage [Unused Byte]
STKSAV  EQU $033A ;Machine Stack Storage [Unused Byte]
USER11  EQU $033B ;Free Byte for User Programs
TBFFR   EQU $033C ;Cassette I/O Buffer

STKSLO  EQU $03FC ;Stack Start LSB [Unused Byte]
STKSHI  EQU $03FD ;Stack Start MSB [Unused Byte]
STKELO  EQU $03FE ;Stack End LSB   [Unused Byte]
STKEHI  EQU $03FF ;Stack End MSB   [Unused Byte]

;Video RAM and ROM 
VICSCN  EQU $0400 ;Video Screen Memory Area (Unexpanded)
CHRROM  EQU $D000 ;Character Generator ROM
VICCLR  EQU $D800 ;Color RAM (Unexpanded)

;ROM Routines
FSFLFA  EQU $F314 ;Find Logical File A

;Machine Language Basic Stub
        ORG $0801              ;Start of Basic Program 
BASIC:  DC  $0C, $08           ;Pointer to Next Line 
        DC  $00, $00           ;Line Number (0)
        DC  $9E                ;SYS 
        DC  $20                ;' '
        DC  $32, $30, $36 ,$32 ;"2062" 
        DC  $00                ;End of Line Marker
        DC  $00, $00           ;End of Basic Program

START:  TSX         ;Get Stack Pointer
        STX STKSAV  ;and Save for Exit
        JMP MAIN    ;Execute Program

EXIT:   LDX STKSAV  ;Retrieve Saved Stack Pointer
        TXS         ;and Restore It
        RTS         ;Return to BASIC

;Poll Keyboard for Character
POLKEY  EQU $FFE4   ;Aliased to Kernal GETIN Routine

;Get Character from Keyboard
GETKEY  EQU POLKEY  ;Get Key From Keybord

;Wait for Character from Keyboard
GETCHR: JSR GETKEY  ;Poll Keyboard
        BEQ GETCHR  ;If No Key, Loop
        RTS

;Print Character to Console
;uses direct call to SCRNOUT instead of CHROUT 
PUTCHR  EQU $E716   ;Aliased to SRCNOUT Routine

;Delete Previous Character
DELCHR: LDA #DELKEY ;Load Delete Character
        JMP PUTCHR  ;Print and Return

;Advance Character to Next line
NEWLIN: LDX #0      ;Store 0
        STX $D3     ;in Cursor Column and
        JMP $E87C   ;Execute NXTLINE Routine

;Print Zero Delimited String to Screen
PUTSTR: TXA         ;Copy LSB to Accumulator
        JMP $AB1E   ;Execute STROUT

        INCLUDE "../include/prbyte.a02" ;PRBYTE and PRHEX routine

