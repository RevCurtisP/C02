Function Library  Name                  Description
abs      stdlib   Absolute Value        Return absolute value of byte.
adddst   stddef   Add Destination       Add value to Destination Pointer.
addsrc   stddef   Add Source            Add value to Source Pointer.
addzpw   stddef   Add Zero Page Word    Add value to word in zero page     
anykey   stdiox   Any Key               Display "Any Key" prompt and wait for keypress.
atoc     stdlib   ASCII to Character    Convert numeric string to byte.
blkbgn   block    Block Begin           Set beginning of block address.
blkend   block    Block End             Set end of block address.
blkseg   block    Block Segment         Set block segment size.
blkset   block    Block Set             Fill entire block with character.
blkrst   block    Block Reset           Set block pointer to beginning of block.
blknxt   block    Block Next            Move block pointer forward one segment.
blkput   block    Block Append          Copy bytes from array to current segment.
blkget   block    Block Get             Copy bytes from current segment to array.
blkmem   block    Block Memory          Search block for segment matching array. 
blkstr   block    Block String          Search block for segment beginning with string.
blkswp   block    Block Swap            Swap bytes of array with the current segment.
blksrt   block    Block Sort            Sort segments in block by initial string.
button   paddle   Button                Read paddle button controller status.
chdir    direct   Change Directory      Change to specified directory
chdrv    direct   Change Drive          Change to specified drive
ctoa     stdlib   Character to ASCII    Convert byte to numeric string.
div      stdlib   Divide                Divide two bytes.
drvnam   direct   Drive Name            Return name of specified drive
failed   test     Failed                Write "  Fail" to screen.
failln   test     Failed Line           Write "  Fail" plus newline to screen.
fclose   fileio   File Close            Close file.
feof     fileio   File End of File      Check for end of file condition.
ferror   fileio   File Error            Get file error information.
fflush   fileio   File Flush            Flush output buffer to file.
fgetc    fileio   File Get Character    Read character from file.
fgets    fileio   File Get String       Read string from file.
fopen    fileio   File Open             Open file.
florps   test     Fail or Pass          Write "  Fail" or "  Pass" to screen.
flpsln   test     Fail or Pass Line     Write "  Fail" or "  Pass" plus newline to screen.
fputc    fileio   File Put Character    Write character to file.
fputln   fileio   File Put Line         Write line to file.
fputs    fileio   File Put String       Write string to file.
fread    fileio   File Read             Read bytes from file.
fsaddr   fileio   File Set Address      Set address for fread, fwrite, fsave, or fload.
fsinit   fileio   File System Init      Initialize file system.
fsname   fileio   File Set Name         Set filename for fopen, fsave, or fload.
fwrite   fileio   File Write            Write bytes to file.
getc     stdio    Get Character         Read character from keyboard.
getcwd   direct   Get CWD               Return current working directory
getdrv   direct   Get Drive             Return current drive identifier
getdst   stddef   Get Destination       Get address in Destination Pointer.
getprc   stdiox   Get Prompt Character  Display prompt and wait for keypress.
gets     stdio    Get String            Read string from keyboard.
getsrc   stddef   Get Source            Get address in Source Pointer.
isalnm   ctype    Is Alphanumeric       Return TRUE if character is A-Z, a-z, or 0-9.
isalph   ctype    Is Alphabetic         Return TRUE if character is A-Z or a-z.
isbdgt   ctype    Is Binary Digit       Return TRUE if character is 0 or 1.
isctrl   ctype    is Control            Return TRUE if ASCII code is 0-31 or 127.
isdigt   ctype    Is Digit              Return TRUE if character is 0-9.
isgrph   ctype    Is Graphical          Return TRUE if ASCII code is 33-126.
ishdgt   ctype    Is Hex Digit          Return TRUE if character is 0-9, A-F, or a-f.
islowr   ctype    Is Lowercase          Return TRUE if character is a-z.   
ispnct   ctype    Is Punctuation        Return TRUE if Graphical and not Alphanumeric.
isprnt   ctype    Is Printable          Return TRUE if ASCII code is 32-126.
isspce   ctype    Is white Space        Return TRUE if ASCII code is 9-13 or 32.
isuppr   ctype    Is Uppercase          Return TRUE if character is A-Z.
joystk   joystk   Joystick              Read Atari style joystick controller status.
lgtpen   lgtpen   Light Pen             Read light pen status.
maddr    memio    Memory Address        Return address contained in memory file pointer.
max      stdlib   Maximum               Return greater of two byte.
mclose   memio    Memory Close          Close memory file.
memdst   memory   Memory Destination    Set destination array for subsequent functions.
memset   memory   Memory Set            File bytes in array with byte.
memchr   memory   Memory Character      Search for byte in array.
memclr   memory   Memory Cllear         File bytes in array with $00.
memcmp   memory   Memory Compare        Compare bytes in array against destination array.
memcpy   memory   Memory Copy           Copy bytes from array to destination array.
memswp   memory   Memory Swap           Swap bytes in array with destination array.
mflush   memio    Memory Flush          Flush memory file.
mgetc    memio    Memory Get Character  Read single character from memory file. 
mgets    memio    Memory Get String     Read string from memory file. 
min      stdlib   Minimum               Return lesser of two byte.
mkdir    direct   Make Directory        Create specified directory
mopen    memio    Memory Open           Open memory file.
mputc    memio    Memory Put Character  Write single character to memory file. 
mputln   memio    Memory Put String     Write string followed by newline to memory file. 
mputs    memio    Memory Put String     Write string to memory file. 
mult     stdlib   Multiply              Multiply two bytes.
opndir   dirent   Open Directory        Open directory for reading
pack     bitlib   Pack nybbles          Pack two nybbles into a single byte.
paddle   paddle   Paddle                Read paddle controller position.
passed   test     Passed                Write "  Pass" to screen.
passln   test     Passed Line           Print "  Pass" plus newline to screen.
psflln   test     Pass or Fail Line     Write "  Pass" or "  Fail" plus newline to screen.
psorfl   test     Pass or Fail          Write "  Pass" or "  Fail" to screen.
ptrset   pointer  Pointer Set           Write pointer to address.
ptrput   pointer  Pointer Put           Write byte and increment pointer.
ptrget   pointer  Pointer Get           Read byte and increment pointer.
ptrinc   pointer  Pointer Increment     Increment pointer.
ptrdec   pointer  Pointer Decrement     Decrement pointer.
ptradd   pointer  Pointer Add           Add value to pointer.
ptrsub   pointer  Pointer Subtract      Subtract value from pointer.
ptrcmp   pointer  Pointer Compare       Compare pointer against address.
ptrsav   pointer  Pointer Save          Save pointer into two-byte array.
ptrrst   pointer  Pointer Restore       Restore pointer from two-byte array.
printf   stdiox   Print Formatted       Write formatted byte and/or string/address to screen.
putadr   test     Put Address           Write "address=" and hexadecimal address to screen.
putc     stdio    Put Character         Write character to screen.
putdec   stdiox   Put Decimal           Write byte to screen as decimal number.
putdel   stdiox   Put Decimal Left      Write byte to screen as left-justified decimal.
putder   stdiox   Put Decimal Right     Write byte to screen as right-justified decimal.
putdst   stdios   Put Destination       Write destination string to screen.
puthex   stdiox   Put Hexadecimal       Write byte to screen as hexadecimal number.
putln    stdio    Put Line              Write string plus newline to screen. 
puts     stdio    Put String            Write string to screen.
putspc   stdiox   Put Space             Write space character to screen.
putsub   stdio    Put Substring         Write substring to screen.
putwrd   stdiox   Put Word              Write address to screen as hexadecimal number.
rand     stdlib   Random                Generate pseudorandom number.
rands    stdlib   Random Seed           Seed random number generator.
rddir    dirent   Read Directory        Read Directory Entry
rdhdr    dirent   Read Header           Read Directory Header
rmdir    direct   Remove Directory      Remove specified directory
resdst   stddef   Restore Destination   Restore Destination Pointer from TEMP variables.
resreg   stddef   Restore Registers     Restore A, X, and Y registers from TEMP variables.
resrxy   stddef   Restore Reg. X and Y  Restore X, and Y registers from TEMP variables.
ressrc   stddef   Restore Source        Restore Source Pointer from TEMP variables.
rotl     bitlib   Rotate Left           Rotate byte left specified number of bits.
rotr     bitlib   Rotate Right          Rotate byte right specified number of bits.
savdst   stddef   Save Destination      Save Destination Pointer in TEMP variables.
savreg   stddef   Save Registers        Save A, X, and Y registers in TEMP variables.
savrxy   stddef   Save Reg. X and Y     Save X, and Y registers in TEMP variables.
savsrc   stddef   Save Source           Save Source Pointer in TEMP variables.
setdss   stddef   Set Dest. Source      Set Destination Pointer to Source Pointer.
setdst   stddef   Set Destination       Set Destination Pointer to address.
setsrc   stddef   Set Source            Set Source Pointer to address.
setsrd   stddef   Set Source Dest.      Set Source Pointer to Destination Pointer.
shiftl   bitlib   Shift Left            Shift byte left specified number of bits.
shiftr   bitlib   Shift Right           Shift byte right specified number of bits.
stkbgn   stack    Stack Begin           Set start of stack address.
stkdup   stack    Stack Duplicate       Duplicate top entry of stack.
stkend   stack    Stack End             Set end of stack address.
stkovr   stack    Stack Over            Copy second from top entry of stack to top.
stkpop   stack    Stack Pop             Remove entry from top of stack.
stkpsh   stack    Stack Push            Push array contents onto top of stack.
stkptr   stack    Stack Pointer         Get stack pointer address.
stkrst   stack    Stack Reset           Initialize or clear stack.
stkset   stack    Stack Set             Set stack pointer to address.
stkstr   stack    Stack String          Push string onto top of stack.
stktop   stack    Stack Top             Get entry from top of stack without popping it.
stkswp   stack    Stack Swap            Swap top entry of stack with entry below it.
strapd   string   String Append         Append character to string.
strcat   string   String Concatenate    Concatenate string to destination string.
strchr   string   String Character      Search for character in string.
strcmp   string   String Compare        Compare string contents against destination string.
strcpy   string   String Copy           Copy string contents to destination string.
strcsp   stringx  String Char Span      Return length of span in destination not in string.
strcut   string   String Cut            Copy substring to destination string.
strdst   string   String Destination    Set destination string for subsequent functions.
strlen   string   String Length         Calculate length of string.
strpbk   stringx  String Pointer Break  Find first character in destination found in string.
strrch   string   String Reverse Char   Search for character from end of string.
strspn   stringx  String Span           Return length of span in destination found in string.
strstr   string   String String         Search for string in destination string.
swap     bitlib   Swap nybbles          Swaps left and right nybbles in byte.
tolowr   ctype    To Lowercase          Convert character to lowercase.
touppr   ctype    To Uppercase          Convert character to uppercase.
trufls   test     True or False         Convert value to #TRUE or #FALSE.
unpack   bitlib   Unpack nybbles        Unpack byte into two nybbles.
